{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\JapaneseLearning\\\\japaneselearning\\\\src\\\\VocabDictionary.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport VocabCard from './VocabCard';\nimport { VocabWords } from './Data/Vocab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VocabDictionary() {\n  _s();\n\n  //var searchBarEntry = document.getElementById(\"number\").value;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  function isSearched(vocabTerm) {\n    let meaningFound = false;\n    vocabTerm.meaning.forEach(element => {\n      if (element.includes(searchTerm.toLowerCase())) {\n        meaningFound = true;\n      }\n    });\n\n    if (searchTerm == \"\") {\n      return true;\n    } else if (vocabTerm.romaji.includes(searchTerm.toLowerCase())) {\n      return true;\n    } else if (meaningFound) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function updateSearch() {\n    setSearchTerm(document.getElementById(\"search\").value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexbox-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchBar\",\n      children: [\"Search\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: updateSearch,\n        id: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexbox-row\",\n      children: Object.values(VocabWords).filter(isSearched).map(vocabWord => /*#__PURE__*/_jsxDEV(VocabCard, {\n        kanji: vocabWord.kanji,\n        characters: vocabWord.characters,\n        romaji: vocabWord.romaji,\n        part: vocabWord.part,\n        meaning: vocabWord.meaning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VocabDictionary, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = VocabDictionary;\nexport default VocabDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"VocabDictionary\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/JapaneseLearning/japaneselearning/src/VocabDictionary.js"],"names":["React","useState","useEffect","VocabCard","VocabWords","VocabDictionary","searchTerm","setSearchTerm","isSearched","vocabTerm","meaningFound","meaning","forEach","element","includes","toLowerCase","romaji","updateSearch","document","getElementById","value","Object","values","filter","map","vocabWord","kanji","characters","part"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACvB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASO,UAAT,CAAoBC,SAApB,EAA+B;AAC3B,QAAIC,YAAY,GAAG,KAAnB;AACAD,IAAAA,SAAS,CAACE,OAAV,CAAkBC,OAAlB,CAA0BC,OAAO,IAAI;AACjC,UAAGA,OAAO,CAACC,QAAR,CAAiBR,UAAU,CAACS,WAAX,EAAjB,CAAH,EAA+C;AAC3CL,QAAAA,YAAY,GAAG,IAAf;AACH;AACJ,KAJD;;AAMA,QAAGJ,UAAU,IAAI,EAAjB,EAAqB;AACjB,aAAO,IAAP;AACH,KAFD,MAGK,IAAGG,SAAS,CAACO,MAAV,CAAiBF,QAAjB,CAA0BR,UAAU,CAACS,WAAX,EAA1B,CAAH,EAAwD;AACzD,aAAO,IAAP;AACH,KAFI,MAGA,IAAGL,YAAH,EAAiB;AAClB,aAAO,IAAP;AACH,KAFI,MAGA;AACD,aAAO,KAAP;AACH;AACJ;;AAED,WAASO,YAAT,GAAwB;AACpBV,IAAAA,aAAa,CAACW,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAnC,CAAb;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,wCACU;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEd,UAA1B;AAAsC,QAAA,QAAQ,EAAEW,YAAhD;AAA8D,QAAA,EAAE,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKI,MAAM,CAACC,MAAP,CAAclB,UAAd,EAA0BmB,MAA1B,CAAiCf,UAAjC,EAA6CgB,GAA7C,CAAiDC,SAAS,iBACvD,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,SAAS,CAACC,KAA5B;AAAmC,QAAA,UAAU,EAAED,SAAS,CAACE,UAAzD;AAAqE,QAAA,MAAM,EAAEF,SAAS,CAACT,MAAvF;AAA+F,QAAA,IAAI,EAAES,SAAS,CAACG,IAA/G;AAAqH,QAAA,OAAO,EAAEH,SAAS,CAACd;AAAxI;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA1CQN,e;;KAAAA,e;AA4CT,eAAeA,eAAf","sourcesContent":["import './App.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport VocabCard from './VocabCard';\r\nimport { VocabWords } from './Data/Vocab';\r\n\r\nfunction VocabDictionary() {\r\n    //var searchBarEntry = document.getElementById(\"number\").value;\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    function isSearched(vocabTerm) {\r\n        let meaningFound = false;\r\n        vocabTerm.meaning.forEach(element => {\r\n            if(element.includes(searchTerm.toLowerCase())) {\r\n                meaningFound = true;\r\n            }\r\n        });\r\n\r\n        if(searchTerm == \"\") {\r\n            return true;\r\n        }\r\n        else if(vocabTerm.romaji.includes(searchTerm.toLowerCase())) {\r\n            return true;\r\n        }\r\n        else if(meaningFound) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function updateSearch() {\r\n        setSearchTerm(document.getElementById(\"search\").value);\r\n    }\r\n\r\n    return(\r\n        <div className=\"flexbox-item\">\r\n            <div className=\"SearchBar\">\r\n                Search<input type=\"text\" value={searchTerm} onChange={updateSearch} id=\"search\"/>\r\n            </div>\r\n            <div className=\"flexbox-row\">\r\n                {Object.values(VocabWords).filter(isSearched).map(vocabWord =>(\r\n                    <VocabCard kanji={vocabWord.kanji} characters={vocabWord.characters} romaji={vocabWord.romaji} part={vocabWord.part} meaning={vocabWord.meaning}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VocabDictionary;"]},"metadata":{},"sourceType":"module"}