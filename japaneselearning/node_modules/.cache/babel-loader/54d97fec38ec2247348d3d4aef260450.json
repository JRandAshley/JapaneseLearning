{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\JapaneseLearning\\\\japaneselearning\\\\src\\\\VocabDictionary.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport VocabCard from './VocabCard';\nimport { VocabWords } from './Data/Vocab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VocabDictionary() {\n  _s();\n\n  //var searchBarEntry = document.getElementById(\"number\").value;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  function isSearched(vocabTerm) {\n    if (searchTerm == \"\") {\n      return true;\n    } else if (vocabTerm.kanji.includes(searchTerm.toLowerCase())) {\n      console.log(\"kanji is true\");\n      return true;\n    } else if (vocabTerm.characters.includes(searchTerm.toLowerCase())) {\n      console.log(\"characters is true\");\n      return true;\n    } else if (vocabTerm.romaji.includes(searchTerm.toLowerCase())) {\n      console.log(\"romaji is true\");\n      return true;\n    } else {\n      vocabTerm.meaning.forEach(element => {\n        if (element.includes(searchTerm.toLowerCase())) {\n          console.log(\"meaning is true\");\n          return true;\n        }\n      });\n    }\n\n    return false;\n  }\n\n  function isSearchedTest(vocabTerm) {\n    vocabTerm.meaning.forEach(element => {\n      console.log(\"---------------------\");\n      console.log(element);\n\n      if (searchTerm == \"\") {\n        return true;\n      } else if (element.includes(searchTerm.toLowerCase())) {\n        console.log(\"true\");\n        return true;\n      }\n    });\n  }\n\n  function updateSearch() {\n    setSearchTerm(document.getElementById(\"search\").value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SearchBar\",\n        children: [\"Search\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: updateSearch,\n          id: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexbox-row\",\n        children: Object.values(VocabWords).filter(isSearchedTest).map(vocabWord => /*#__PURE__*/_jsxDEV(VocabCard, {\n          kanji: vocabWord.kanji,\n          characters: vocabWord.characters,\n          romaji: vocabWord.romaji,\n          part: vocabWord.part,\n          meaning: vocabWord.meaning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VocabDictionary, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = VocabDictionary;\nexport default VocabDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"VocabDictionary\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/JapaneseLearning/japaneselearning/src/VocabDictionary.js"],"names":["React","useState","useEffect","VocabCard","VocabWords","VocabDictionary","searchTerm","setSearchTerm","isSearched","vocabTerm","kanji","includes","toLowerCase","console","log","characters","romaji","meaning","forEach","element","isSearchedTest","updateSearch","document","getElementById","value","Object","values","filter","map","vocabWord","part"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport VocabCard from './VocabCard';\r\nimport { VocabWords } from './Data/Vocab';\r\n\r\nfunction VocabDictionary() {\r\n    //var searchBarEntry = document.getElementById(\"number\").value;\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    function isSearched(vocabTerm) {\r\n        if(searchTerm == \"\") {\r\n            return true;\r\n        }\r\n        else if(vocabTerm.kanji.includes(searchTerm.toLowerCase())) {\r\n            console.log(\"kanji is true\")\r\n            return true;\r\n        }\r\n        else if(vocabTerm.characters.includes(searchTerm.toLowerCase())) {\r\n            console.log(\"characters is true\")\r\n            return true;\r\n        }\r\n        else if(vocabTerm.romaji.includes(searchTerm.toLowerCase())) {\r\n            console.log(\"romaji is true\")\r\n            return true;\r\n        }\r\n        else {\r\n            vocabTerm.meaning.forEach(element => {\r\n                if(element.includes(searchTerm.toLowerCase())) {\r\n                    console.log(\"meaning is true\")\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function isSearchedTest(vocabTerm) {\r\n        vocabTerm.meaning.forEach(element => {\r\n            console.log(\"---------------------\")\r\n            console.log(element)\r\n            if(searchTerm == \"\"){\r\n                return true;\r\n            }\r\n            else if(element.includes(searchTerm.toLowerCase())) {\r\n                console.log(\"true\")\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    function updateSearch() {\r\n        setSearchTerm(document.getElementById(\"search\").value);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <header className=\"App\">\r\n                <div className=\"SearchBar\">\r\n                    Search<input type=\"text\" value={searchTerm} onChange={updateSearch} id=\"search\"/>\r\n                </div>\r\n                <div className=\"flexbox-row\">\r\n                    {Object.values(VocabWords).filter(isSearchedTest).map(vocabWord =>(\r\n                        <VocabCard kanji={vocabWord.kanji} characters={vocabWord.characters} romaji={vocabWord.romaji} part={vocabWord.part} meaning={vocabWord.meaning}/>\r\n                    ))}\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VocabDictionary;"]},"metadata":{},"sourceType":"module"}