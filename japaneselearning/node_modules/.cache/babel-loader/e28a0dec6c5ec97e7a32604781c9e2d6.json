{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\source\\\\repos\\\\JapaneseLearning\\\\japaneselearning\\\\src\\\\KanaTableCell.js\";\nimport './App.css';\nimport { Characters } from './Data/Characters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KanaTableCell(props) {\n  var cellData = \"\";\n\n  if (props.romanji == true) {\n    let c = props.consonant;\n    let v = props.vowel;\n    let r = Characters[c][v].Seion.Romaji;\n    cellData = cellData.concat(r);\n  }\n\n  if (props.hiragana == true) {\n    let c = props.consonant;\n    let v = props.vowel;\n    let r = Characters[c][v].Seion.Hiragana;\n    cellData = cellData.concat(r);\n  }\n\n  if (props.katakana == true) {\n    let c = props.consonant;\n    let v = props.vowel;\n    let r = Characters[c][v].Seion.Katakana;\n    cellData = cellData.concat(r);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: cellData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c = KanaTableCell;\nexport default KanaTableCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanaTableCell\");","map":{"version":3,"sources":["C:/Users/randa/source/repos/JapaneseLearning/japaneselearning/src/KanaTableCell.js"],"names":["Characters","KanaTableCell","props","cellData","romanji","c","consonant","v","vowel","r","Seion","Romaji","concat","hiragana","Hiragana","katakana","Katakana"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,UAAT,QAA2B,mBAA3B;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAGD,KAAK,CAACE,OAAN,IAAiB,IAApB,EAAyB;AACrB,QAAIC,CAAC,GAAGH,KAAK,CAACI,SAAd;AACA,QAAIC,CAAC,GAAGL,KAAK,CAACM,KAAd;AACA,QAAIC,CAAC,GAAGT,UAAU,CAACK,CAAD,CAAV,CAAcE,CAAd,EAAiBG,KAAjB,CAAuBC,MAA/B;AACAR,IAAAA,QAAQ,GAAGA,QAAQ,CAACS,MAAT,CAAgBH,CAAhB,CAAX;AACH;;AACD,MAAGP,KAAK,CAACW,QAAN,IAAkB,IAArB,EAA0B;AACtB,QAAIR,CAAC,GAAGH,KAAK,CAACI,SAAd;AACA,QAAIC,CAAC,GAAGL,KAAK,CAACM,KAAd;AACA,QAAIC,CAAC,GAAGT,UAAU,CAACK,CAAD,CAAV,CAAcE,CAAd,EAAiBG,KAAjB,CAAuBI,QAA/B;AACAX,IAAAA,QAAQ,GAAGA,QAAQ,CAACS,MAAT,CAAgBH,CAAhB,CAAX;AACH;;AACD,MAAGP,KAAK,CAACa,QAAN,IAAkB,IAArB,EAA0B;AACtB,QAAIV,CAAC,GAAGH,KAAK,CAACI,SAAd;AACA,QAAIC,CAAC,GAAGL,KAAK,CAACM,KAAd;AACA,QAAIC,CAAC,GAAGT,UAAU,CAACK,CAAD,CAAV,CAAcE,CAAd,EAAiBG,KAAjB,CAAuBM,QAA/B;AACAb,IAAAA,QAAQ,GAAGA,QAAQ,CAACS,MAAT,CAAgBH,CAAhB,CAAX;AACH;;AAED,sBACI;AAAA,cAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;KAxBQF,a;AA0BT,eAAeA,aAAf","sourcesContent":["import './App.css';\r\nimport { Characters } from './Data/Characters';\r\n\r\nfunction KanaTableCell(props) {\r\n    var cellData = \"\"\r\n    if(props.romanji == true){\r\n        let c = props.consonant;\r\n        let v = props.vowel;\r\n        let r = Characters[c][v].Seion.Romaji;\r\n        cellData = cellData.concat(r);\r\n    }\r\n    if(props.hiragana == true){\r\n        let c = props.consonant;\r\n        let v = props.vowel;\r\n        let r = Characters[c][v].Seion.Hiragana;\r\n        cellData = cellData.concat(r);\r\n    }\r\n    if(props.katakana == true){\r\n        let c = props.consonant;\r\n        let v = props.vowel;\r\n        let r = Characters[c][v].Seion.Katakana;\r\n        cellData = cellData.concat(r);\r\n    }\r\n\r\n    return(\r\n        <div>{cellData}</div>\r\n    );\r\n}\r\n\r\nexport default KanaTableCell;"]},"metadata":{},"sourceType":"module"}